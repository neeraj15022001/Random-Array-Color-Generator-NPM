import Conversions from"./Conversions.js";class ColorGenerator{constructor(t){this.length=t,this.conversions=new Conversions}getCurrentSizeOfArray(){return this.length}setSizeOfArray(t){this.length=t}generateRGB(){const t=[];for(let r=0;r<this.length;r++){const r=`rgb(${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.floor(255*Math.random())})`;t.push(r)}return t}generateHEX(){const t=[];return this.generateRGB().forEach((r=>{const o=this.conversions.RGBToHex(r);t.push(o)})),t}generateHSL(){const t=[];return this.generateRGB().forEach((r=>{const o=this.conversions.RGBToHSL(r);t.push(o)})),t}generateHSV(){const t=[];return this.generateRGB().forEach((r=>{const o=this.conversions.RGBToHSV(r);t.push(o)})),t}generateRGBA(){const t=[];for(let r=0;r<this.length;r++){const r=`rgba(${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.random().toFixed(2)})`;t.push(r)}return t}generateHSLA(){const t=this.generateHSL(),r=[];return t.forEach((t=>{const o=t.substr(4).split(")")[0].split(","),e=`hsla(${o[0]}, ${o[1]}, ${o[2]}, ${Math.random().toFixed(2)})`;r.push(e)})),r}}export default ColorGenerator;
