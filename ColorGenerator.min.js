import Conversions from"./Conversions.js";class ColorGenerator{constructor(t){this.length=t,this.conversions=new Conversions}getCurrentSizeOfArray(){return this.length}setSizeOfArray(t){this.length=t}generateRGB(){const t=[];for(let o=0;o<this.length;o++){const o=`rgb(${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.floor(255*Math.random())})`;t.push(o)}return t}generateHEX(){const t=[];return this.generateRGB().forEach((o=>{const r=this.conversions.RGBToHex(o);t.push(r)})),t}generateHSL(){const t=[];return this.generateRGB().forEach((o=>{const r=this.conversions.RGBToHSL(o);t.push(r)})),t}generateHSV(){const t=[];return this.generateRGB().forEach((o=>{const r=this.conversions.RGBToHSV(o);t.push(r)})),t}generateRGBA(){const t=[];for(let o=0;o<this.length;o++){const o=`rgba(${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.random().toFixed(2)})`;t.push(o)}return t}generateHSLA(){const t=this.generateHSL(),o=[];t.forEach((t=>{const r=t.substr(4).split(")")[0].split(","),e=`hsla(${r[0]}, ${r[1]}, ${r[2]}, ${Math.random().toFixed(2)})`;o.push(e)})),console.log(o)}}export default ColorGenerator;
